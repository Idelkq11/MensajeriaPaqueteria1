// <auto-generated />
using System;
using MensajeriaPaqueteria.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MensajeriaPaqueteria.Infrastructure.Migrations
{
    [DbContext(typeof(MensajeriaPaqueteriaDbContext))]
    partial class MensajeriaPaqueteriaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MensajeriaPaqueteria.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("MensajeriaPaqueteria.Domain.Entities.Envio", b =>
                {
                    b.Property<int>("EnvioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnvioId"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirmaEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.Property<string>("UbicacionActual")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnvioId");

                    b.HasIndex("PaqueteId");

                    b.ToTable("Envios");
                });

            modelBuilder.Entity("MensajeriaPaqueteria.Domain.Entities.Mensajero", b =>
                {
                    b.Property<int>("MensajeroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MensajeroId"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MensajeroId");

                    b.ToTable("Mensajeros");
                });

            modelBuilder.Entity("MensajeriaPaqueteria.Domain.Entities.Paquete", b =>
                {
                    b.Property<int>("PaqueteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaqueteId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("EstadoPaquete")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoPaquete")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaqueteId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Paquetes");
                });

            modelBuilder.Entity("Ruta", b =>
                {
                    b.Property<int>("RutaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RutaId"));

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoRuta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MensajeroId")
                        .HasColumnType("int");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RutaId");

                    b.HasIndex("MensajeroId");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("MensajeriaPaqueteria.Domain.Entities.Envio", b =>
                {
                    b.HasOne("MensajeriaPaqueteria.Domain.Entities.Paquete", "Paquete")
                        .WithMany()
                        .HasForeignKey("PaqueteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("MensajeriaPaqueteria.Domain.Entities.Paquete", b =>
                {
                    b.HasOne("MensajeriaPaqueteria.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Ruta", b =>
                {
                    b.HasOne("MensajeriaPaqueteria.Domain.Entities.Mensajero", "Mensajero")
                        .WithMany()
                        .HasForeignKey("MensajeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mensajero");
                });
#pragma warning restore 612, 618
        }
    }
}
