@page "{id:int}"
@model MensajeriaPaqueteria.Web.Pages.Envios.DetailsModel
@{
    ViewData["Title"] = "Detalles del Envío";
}

<h1>@ViewData["Title"]</h1>

<div>
    <dl class="row">
        <dt class="col-sm-2">Código de Envío</dt>
        <dd class="col-sm-10">@Model.Envio.EnvioId</dd>

        <dt class="col-sm-2">Fecha de Envío</dt>
        <dd class="col-sm-10">@Model.Envio.FechaEnvio.ToString("dd/MM/yyyy")</dd>

        <dt class="col-sm-2">Dirección</dt>
        <dd class="col-sm-10">@Model.Envio.Direccion</dd>

        <dt class="col-sm-2">Paquete</dt>
        <dd class="col-sm-10">@Model.Envio.PaqueteTipo</dd>

        <dt class="col-sm-2">Estado</dt>
        <dd class="col-sm-10">@Model.Envio.Estado</dd>
    </dl>
</div>

<!-- Agregar Leaflet.js -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

@if (!string.IsNullOrEmpty(Model.Envio.UbicacionActual))
{
    <div id="map" style="width: 100%; height: 400px;"></div>

    <script>
        function initMap() {
            var ubicacion = "@Model.Envio.UbicacionActual".split(",");
            var latitud = parseFloat(ubicacion[0]);
            var longitud = parseFloat(ubicacion[1]);

            var map = L.map('map').setView([latitud, longitud], 12);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            L.marker([latitud, longitud]).addTo(map)
                .bindPopup("Ubicación del Envío")
                .openPopup();
        }

        window.onload = initMap;
    </script>
}
else
{
    <p><strong>Ubicación no disponible.</strong></p>
}

<!-- Botones -->
<a asp-page="Edit" asp-route-id="@Model.Envio.EnvioId" class="btn btn-warning">Editar</a>
<a asp-page="Delete" asp-route-id="@Model.Envio.EnvioId" class="btn btn-danger">Eliminar</a>
<a asp-page="Index" class="btn btn-secondary">Volver</a>

<!-- Aquí va el código SignalR -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    // Establecer conexión con el Hub
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/trackingHub")
        .configureLogging(signalR.LogLevel.Information)
        .build();

    // Iniciar la conexión
    connection.start().then(() => {
        console.log("Conectado a SignalR");
    }).catch(err => console.error(err));

    // Escuchar actualizaciones de estado
    connection.on("ReceiveUpdate", (envioId, nuevoEstado) => {
        if (envioId === @Model.Envio.EnvioId) {
            // Actualizar el estado en la UI
            document.querySelector(".estado").innerText = nuevoEstado;
        }
    });

    // Escuchar actualizaciones de ubicación
    connection.on("ActualizarUbicacion", (envioId, nuevaUbicacion) => {
        if (envioId === @Model.Envio.EnvioId && nuevaUbicacion) {
            // Actualizar la ubicación en el mapa
            var ubicacion = nuevaUbicacion.split(",");
            var latitud = parseFloat(ubicacion[0]);
            var longitud = parseFloat(ubicacion[1]);

            var map = L.map('map').setView([latitud, longitud], 12);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);
            L.marker([latitud, longitud]).addTo(map)
                .bindPopup("Ubicación del Envío")
                .openPopup();
        }
    });
</script>
